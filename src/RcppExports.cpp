// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// euclidean
double euclidean(NumericVector x, NumericVector y);
RcppExport SEXP _petal2_euclidean(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(euclidean(x, y));
    return rcpp_result_gen;
END_RCPP
}
// mmsym
arma::vec mmsym(arma::mat& X, Rcpp::Function func);
RcppExport SEXP _petal2_mmsym(SEXP XSEXP, SEXP funcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type func(funcSEXP);
    rcpp_result_gen = Rcpp::wrap(mmsym(X, func));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_petal2_euclidean", (DL_FUNC) &_petal2_euclidean, 2},
    {"_petal2_mmsym", (DL_FUNC) &_petal2_mmsym, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_petal2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
